name: Build and Push Docker Image to GHCR
on:
  push:
    branches:
      - main # Trigger on pushes to main branch
  pull_request:
    branches:
      - main # Trigger on PRs targeting the main branch
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Step 2: Set up Docker Buildx (for multi-platform builds)

        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        # Step 3: Log in to GitHub Container Registry (GHCR)

        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Uses GitHub username
          password: ${{ secrets.GITHUB_TOKEN }} # Uses the automatically provided GitHub token
      - name: Get short commit SHA
        # Step 4: Get short commit SHA (optional)

        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build and Push Docker image
        # Step 5: Build and Push Docker image for multi-platform (ARM and AMD64)

        run: |
          docker buildx build \
            --platform linux/arm64,linux/amd64 \
            -t ghcr.io/${{ github.repository_owner }}/eggman:$SHORT_SHA \
            --push .
  update-gitops:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitOps repo (using PAT of enohjg)
        uses: actions/checkout@v3
        with:
          repository: bergtobias/homelab-infra
          ref: main
          token: ${{ secrets.GH_OPS_TOKEN }}
          path: apps/eggman

      - name: Patch overlay's newTag to the new SHA (using sed)
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/eggman"
          NEWTAG="${{ needs.build.outputs.short_sha }}"
          OVERLAY="apps/eggman/overlays/prod/kustomization.yaml"

          # Escape all slashes in $IMAGE so sed's regex works properly
          ESCAPED_IMAGE="${IMAGE//\//\\/}"

          # In-place replace: when you see "name: <IMAGE>", go to the next line (n)
          # and substitute "newTag: <whatever>" with the new SHA.
          sed -i "/name: ${ESCAPED_IMAGE}/{n;s/newTag:.*/newTag: ${NEWTAG}/}" "$OVERLAY"

          # (Optional) show the updated block for debugging:
          sed -n "/name: ${ESCAPED_IMAGE}/, /newTag:/p" "$OVERLAY"

      - name: Commit & push if anything changed
        run: |
          cd apps/eggman
          git config user.name "github-action"
          git config user.email "github-action@users.noreply.github.com"
          git add overlays/prod/kustomization.yaml

          if git diff --cached --quiet; then
            echo "No change in overlay; skipping commit."
          else
            git commit -m "ci: bump eggman image to ${{ needs.build.outputs.short_sha }}"
            git push origin main
          fi
